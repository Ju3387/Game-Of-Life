
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Conway's Game of Life</title>
  <style>
    canvas {
      border: 1px solid black;
    }
    button {
      margin: 5px;
    }
  </style>
</head>
<body>
  <canvas id="gameCanvas" width="500" height="500"></canvas>
  <br>
  <button id="startButton">Start</button>
  <button id="pauseButton">Pause</button>
  <button id="resetButton">Reset</button>

  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');
    const rows = 50;
    const cols = 50;
    const cellSize = canvas.width / cols;
    let grid = createGrid();
    let running = false;

    function createGrid() {
      return Array.from({ length: rows }, () => Array(cols).fill(0));
    }

    function randomizeGrid() {
      grid = grid.map(row => row.map(() => Math.random() > 0.7 ? 1 : 0));
    }

    function drawGrid() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      for (let row = 0; row < rows; row++) {
        for (let col = 0; col < cols; col++) {
          ctx.fillStyle = grid[row][col] ? 'black' : 'white';
          ctx.fillRect(col * cellSize, row * cellSize, cellSize, cellSize);
        }
      }
    }

    function getNeighborCount(x, y) {
      let count = 0;
      for (let dx = -1; dx <= 1; dx++) {
        for (let dy = -1; dy <= 1; dy++) {
          if (dx === 0 && dy === 0) continue;
          const nx = x + dx;
          const ny = y + dy;
          if (nx >= 0 && nx < rows && ny >= 0 && ny < cols) {
            count += grid[nx][ny];
          }
        }
      }
      return count;
    }

    function updateGrid() {
      const newGrid = createGrid();
      for (let row = 0; row < rows; row++) {
        for (let col = 0; col < cols; col++) {
          const neighbors = getNeighborCount(row, col);
          if (grid[row][col] === 1) {
            newGrid[row][col] = neighbors === 2 || neighbors === 3 ? 1 : 0;
          } else {
            newGrid[row][col] = neighbors === 3 ? 1 : 0;
          }
        }
      }
      grid = newGrid;
    }

    function gameLoop() {
      if (!running) return;
      updateGrid();
      drawGrid();
      requestAnimationFrame(gameLoop);
    }

    document.getElementById('startButton').addEventListener('click', () => {
      if (!running) {
        running = true;
        gameLoop();
      }
    });

    document.getElementById('pauseButton').addEventListener('click', () => {
      running = false;
    });

    document.getElementById('resetButton').addEventListener('click', () => {
      running = false;
      randomizeGrid();
      drawGrid();
    });

    randomizeGrid();
    drawGrid();
  </script>
</body>
</html>
